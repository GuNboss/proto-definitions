syntax = "proto3";

import "google/protobuf/timestamp.proto";

package oepackage;

service DeviceService {
    rpc getElements(Empty) returns (ElementList);
    rpc getConfiguration(ElementID) returns (ConfigurationList);
    rpc getConfigurationChanged(ConfigurationChangedRequest) returns (stream ConfigurationList);

    rpc setConfiguration(SetConfigurationRequest) returns (SetConfigurationResponse);

    //LOG
    rpc getLogs(ElementID) returns (LogList);
    rpc getLogsChanged(LogChangedRequest) returns (stream LogList);

    //DIVICE
    // rpc getDevice(DeviceRequest) returns (Device);
    // rpc getDevices(DeviceParams) returns (DeviceList);

    //ALARM
    rpc getAlarms(ElementID) returns (AlarmList);
    rpc getAlarmsChanged(AlarmChangedRequest) returns (stream AlarmList);

    //STATE
    // rpc getServerState(Empty) returns (ServerState);

    //PACKAGE
    rpc getPackages(Empty) returns (PackageList);

    //중복체크
    rpc checkDuplicate(CheckRequest) returns (CheckResponse);

// =================== RPC 추가 =========================
    // //LOGIN
    // rpc login(LoginRequest) returns (LoginResponse);                            // 로그인 API

    // //CLI
    // rpc getCLIs(ElementID) returns (CLIList);                                   // CLI 목록 조회

    // //PLD   
    // rpc getPLDs(ElementID) returns (PLDList);                                   // PLD 목록 조회                          

    // //NEIGHBOR
    // rpc getNeighbor(ElementID) returns (NeighborList);                          // Neighbor 목록 조회

    // //모듈 재시작 (AMF, SMF, UPF, UDP, System, DNN, Support_GNB, HSS, MME, PGW, SGW)
    // rpc moduleRestart(ModuleRestartRequest) returns (ModuleRestartResponse);    // 모듈 재시작

    // //라이센스 조회
    // // rpc getLicense(Empty) returns ();

    // //UE 조회
    // rpc getUEs(Empty) returns (UEList);

// ===================RPC 추가 끝=========================


}

// ===================메세지 추가=========================

// message LoginRequest {
//     string id           = 1;
//     string password     = 2;
// }

// message LoginResponse {
//     bool isLogin        = 1;
//     string message      = 2;
//     string token        = 3;
// }

// message CLIList {
//     repeated CLINode nodes      = 1;        // CLI 노드
// }

// message CLINode {
//     string command_alias                = 1;
//     string command_timeout              = 2;
//     string command_target               = 3;
//     string job_group                    = 4;
//     string description                  = 5;

//     repeated CLIParameter parameters    = 6;            // CLIParameter는 따로 rpc 요청하는 식으로
// }

// message CLIParameter {
//     string parameter_name               = 1;
//     string parameter_alias              = 2;
//     string parameter_type               = 3;
//     string parameter_default_value      = 4;
//     string value_range_start            = 5;
//     string value_range_end              = 6;
// }

// message PLDList {
//     repeated PLDParameger parameters    = 1;
// }

// message PLDParameger {
//     int32  device_id                    = 1;                // 기지국 아이디
//     int32  parameter_id                 = 2;                // 파라미터 아이디 
//     string parameter_name               = 3;                // 파라미터 이름
//     string parameter_value              = 4;                // 값
//     string parameter_type               = 5;                // 타입
//     string value_range_start            = 6;                // 시작 범위
//     string value_range_end              = 7;                // 끝 범위
//     string is_unit                      = 8;                // 단위
//     string is_pld                       = 9;                // PLD유무
//     string read_write                   = 10;               // 읽기/쓰기
// }

// message NeighborList {
//     repeated Neighbor neighbors         = 1;
// }

// message Neighbor {
//     string device_id                    = 1;
//     string device_name                  = 2;
//     string index                        = 3;
//     string id                           = 4;
//     string isESCoveredBy                = 5;
//     string isHOAllowed                  = 6;
//     string ps_gnb_id                    = 7;
//     string ps_gnb_id_length             = 8;
//     string ps_cell_localld              = 9;
//     string ps_nRPCI                     = 10;
//     string ps_nRTAC                     = 11;
//     string ps_mcc                       = 12;
//     string ps_mnc                       = 13;
// }

// message ModuleRestartRequest {
//     string name             = 1;                // 소문자 + 스네이크 케이스로 표기  => ex) "smf", "amf", "support_gnb", "system"
// }

// message ModuleRestartResponse {
//     bool   success          = 1;
//     string message          = 2;
// }

// message UEList {
//     repeated UE ues         = 1;
// }

// message UE {
//     string core_name        = 1;
//     string core_type        = 2;
//     string imsi_supi        = 3;
//     string msisdn           = 4;
//     string gk               = 5;
//     string op               = 6;
//     string op_flag          = 7;
//     string apencxtld        = 8;
//     string ul_ambr          = 9;
//     string dl_ambr          = 10;
//     string plmn             = 11;
//     string qci              = 12;
//     string amf              = 13;
//     string imei             = 14;
// }

// ===================메세지 추가 끝=========================

message Empty {}

// Common Response
message CheckResponse {
    bool is_duplicate   = 1;
    string message      = 2;
}

message CheckRequest {
    string name     = 1;        // "ncid", "neid", "serial_number", "device_name"
    string value    = 2;
}

message ElementList {
    repeated Element elements   = 1;
}

message ConfigurationList {
    repeated Configuration configurations = 1;
}

// message DeviceRequest {
//     string id           = 1;
//     string deviceId     = 2;
// }

// message DeviceList {
//     repeated Device devices = 1;
//     string cnt = 2;
// }

// message Device {
//     string henb_id = 1;
//     string logical_henb_id = 2;
//     string side = 3;
//     string active_flag = 4;
//     string hems_id = 5;
//     string serial_number = 6;
//     string oui = 7;
//     string henb_name = 8;
//     string ne_id = 9;
//     string device_type_id = 10;
//     string mgmt_ip = 11;
//     string mgmt_port = 12;
//     string auto_upgrade_flag = 13;
//     string status = 14;
//     string regist_date = 15;
//     string updated_date = 16;
//     string location_info = 17;
//     string main_area = 18;
//     string sub_area = 19;
// }

message SetConfigurationRequest {
    ElementID                       elementID               = 1;
    repeated ConfigurationIdValue   ConfigurationIdValue    = 2;
}

message ConfigurationIdValue {
    string id           = 1;
    string value        = 2;
}

message SetConfigurationResponse {
    bool                    success         = 1;
    string                  message         = 2;
    repeated Configuration  configurations  = 3;
}

message ConfigurationChangedRequest {
    google.protobuf.Timestamp start_timestamp = 1;
}

message Element {
    string id               = 1;
    string name             = 2;
    string type             = 3;
    string model            = 4;
    string version          = 5;
    string tag              = 6;
    string serverAddress    = 7;
    string status           = 8;
}

message ElementID {
    string id = 1;
}

// message ConfigurationName {
//     string name = 1;
// }

// message ConfigurationValue {
//     string value = 1;
// }

message Configuration {
    string id           = 1;
    string parent       = 2;
    string name         = 3;
    string value        = 4;
    string description  = 5;
}

message AlarmList {
    repeated Alarm alarms = 1;
}

message Alarm {
    oneof alarm_type {
        GenericAlarm    generic_alarm           =1;
        CurrentAlarm    current_alarm           =2;    
    }
}

message AlarmChangedRequest {
    google.protobuf.Timestamp start_timestamp      =1;
}

message GenericAlarm {
    string element_id               =1;
    string alarm_code               =2;
    string event_time               =3;
    string severity                 =4;
    string alarm_type               =5;
}

message CurrentAlarm {
    string element_id               = 1;
    string element_name             = 2;
    string alarm_code               = 3;
    string alarm_raised_time        = 4;
    string event_time               = 5;
    string alarm_type               = 6;
    string isACK                    = 7;
    string alarm_loc                = 8;
    string severity                 = 9;
    string report_mechanism         = 10;
    string probable_cause           = 11;
    string specific_problem         = 12;
    string additional_text          = 13;
    string additional_information   = 14;
}

message LogList {
    repeated Log logs = 1;
}

message Log {
    string date = 1;
    oneof log_type {
        GenericLog      generic_log             =2;
        //OAM LOG
        OperationLog    operation_log           =3;
        WebLog          web_log                 =4;
        FaultLog        oam_fault_log           =5;
        //EMS LOG
        EventLog        event_log               =6;
        CLILog          cli_log                 =7;
        NodeBLog        nodeb_log               =8;
        CurrentLog      ems_fault_log           =9;
        Trace           trace                   =10;
    }
}

message LogChangedRequest {
    google.protobuf.Timestamp start_timestamp      =1;
}

message EventLog {
    string idx                  =1;
    string element_id           =2;
    string event_type           =3;
    string event_code           =4;
    string event_code_name      =5;
    string event_head_str       =6;
    string event_logfile_name   =7;
    string context              =8;
}

message CurrentLog {
    string alarm_history_no     =1;
    string element_id           =2;
    string alarm_code           =3;
    string alarm_changed_time   =4;
    string alarm_cleared_time   =5;
    string event_time           =6;
    string alarm_type           =7;
    string alarm_state          =8;
    string alarm_loc            =9;
    string severity             =10;
    string report_mechanism     =11;
    string probable_cause       =12;
    string specific_problem     =13;
    string additional_text      =14;
    string additional_information =15;
}

message CLILog {
    string command_history_no       =1;
    string command_id               =2;
    string command_alias            =3;
    string user_id                  =4;
    string user_ip                  =5;
    string element_id               =6;
    string request_time             =7;
    string response_time            =8;
    string result                   =9;
    string fail_reason              =10;
    string command_head_str         =11;
    string command_logfile_name     =12;
    string context                  =13;
    string transaction_id           =14;
}

message NodeBLog {
    string device_history_no        =1;
    string element_id               =2;
    string hems_id                  =3;
    string serial_number            =4;
    string oui                      =5;
    string element_name             =6;
    string device_type_id           =7;
    string operation_flag           =8;
    string operation_time           =9;
    string operation_user_id        =10;
}

message Trace {

}

message GenericLog {
    string timestamp    = 1;
    string source       = 2;
    string level        = 3;
    string message      = 4;
    string labels       = 5;
}


message OperationLog {
    string idx          = 1;
    string module       = 2;
    string message      = 3;
    string level        = 4;
}

message WebLog {
    string idx          = 1;
    string user_name     = 2;
    string event        = 3;
}

message FaultLog {
    string idx          = 1;
    string module       = 2;
    string code         = 3;
    string event        = 4;
    string message      = 5;
    string level        = 6;
    string read_check   = 7;
}

// message ServerState {                    // oam => configuration 참조
//     string date             = 1;         // ems => 제외
//     string server_address   = 2;
//     string cpu_util         = 3;
//     string memory_util      = 4;
//     string disk_util        = 5;
// }

message PackageList {
    repeated Package packages = 1;
}

message Package {
    string package_no           = 1;
    string package_file_name    = 2;
    string package_version      = 3;
    string model_name           = 4;
    string firmware_version     = 5;
    string software_version     = 6;
    string released_date        = 7;
    string active_flag          = 8;
}